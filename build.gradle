plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

// Common configuration for all sub-projects
allprojects {
    group = 'com.app'
    version = '0.0.1-SNAPSHOT'
    
    repositories {
        mavenCentral()
    }
}

// Configuration for all sub-projects (excludes root project)
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(24)
        }
    }
    
    ext {
        set('springCloudVersion', "2025.0.0")
    }
    
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
    
    tasks.named('test') {
        useJUnitPlatform()
    }
    
    // Configure JVM arguments for XStream compatibility with Java 17+
    tasks.withType(JavaExec) {
        jvmArgs = [
            '--add-opens=java.base/java.io=ALL-UNNAMED',
            '--add-opens=java.base/java.lang=ALL-UNNAMED',
            '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens=java.base/java.util=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens=java.base/java.util.concurrent=ALL-UNNAMED'
        ]
    }
    
    // Configure JVM arguments for Spring Boot run task
    tasks.named('bootRun') {
        jvmArgs = [
            '--add-opens=java.base/java.io=ALL-UNNAMED',
            '--add-opens=java.base/java.lang=ALL-UNNAMED',
            '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens=java.base/java.util=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens=java.base/java.util.concurrent=ALL-UNNAMED'
        ]
    }
    
    // Common dependencies for all sub-projects
    dependencies {
        // Testing dependencies (already included)
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        
        // Common Spring Boot starters
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        
        // Lombok support
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        // Development tools
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
    }
}
